{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "OpenStack on Amazon web service template",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Default" : "cloudy",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "InstanceType" : {
      "Description" : "Instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "KeystoneMysqlRootPassword": {
      "Default": "WSORa6xTu2",
      "Description" : "Keystone's MySQL root password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    
    "KeystoneMysqlUserPassword": {
      "Default": "IWur6lc2CQ",
      "Description" : "Keystone's MySQL user password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    
    "KeystoneSwiftUserPassword": {
      "Default": "icXyuCaywR",
      "Description" : "Keystone swift user password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    
    "KeystoneAdminToken": {
      "Default": "E5VfT9rgAc",
      "Description" : "Keystone admin token",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    }
    
  },
  
"Mappings" : {
		
		"AWSInstanceType2Arch" : {
			"t1.micro"    : { "Arch" : "64" },
			"m1.small"    : { "Arch" : "64" },
			"m1.large"    : { "Arch" : "64" },
			"m1.xlarge"   : { "Arch" : "64" },
			"m2.xlarge"   : { "Arch" : "64" },
			"m2.2xlarge"  : { "Arch" : "64" },
			"m2.4xlarge"  : { "Arch" : "64" },
			"c1.medium"   : { "Arch" : "32" },
			"c1.xlarge"   : { "Arch" : "64" },
			"cc1.4xlarge" : { "Arch" : "64" }
		},
		"AWSRegionArch2AMI" : {
			"us-east-1"      : { "32" : "ami-a0ba68c9", "64" : "ami-baba68d3" },
			"us-west-1"      : { "32" : "ami-63a8f126", "64" : "ami-6da8f128" },
			"us-west-2"      : { "32" : "ami-ac05889c", "64" : "ami-ae05889e" },
			"eu-west-1"      : { "32" : "ami-a99491dd", "64" : "ami-ab9491df" },
			"sa-east-1"      : { "32" : "ami-b473aca9", "64" : "ami-b673acab" },
			"ap-southeast-1" : { "32" : "ami-5c96d20e", "64" : "ami-e88acaba" },
			"ap-northeast-1" : { "32" : "ami-0e299f0f", "64" : "ami-22ad1223" }
		}
	},
	
  "Resources" : {

	  "OpenStackUser" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
				"Path": "/",
				"Policies": [{
					"PolicyName": "DefaultStack",
					"PolicyDocument": {
						"Statement": [
							{
								"Sid": "CloudformationPolicy",
								"Effect":"Allow",
								"Action":"cloudformation:DescribeStackResource",
								"Resource":"*"
							},
							{
								"Sid": "CloudWatchPolicy",
								"Effect"   : "Allow",
								"Action"   : "cloudwatch:PutMetricData",
								"Resource" : "*"
							}
						]
					}
				}]
			}
		},
		
		"OpenstackUserAccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
				"UserName" : {"Ref": "OpenStackUser"}
			}
		},

		
		
		
		
		
		"KeystoneWaitHandle" : {
			"Type" : "AWS::CloudFormation::WaitConditionHandle"
		},
		"KeystoneWaitCondition" : {
			"Type" : "AWS::CloudFormation::WaitCondition",
			"DependsOn" : "KeystoneServer",
			"Properties" : {
			"Handle" : {"Ref" : "KeystoneWaitHandle"},
			"Timeout" : "1200"
			}
		},	  

		
		"KeystoneIPAddress" : {
			"Type" : "AWS::EC2::EIP"
		},

		"KeystoneIPAssoc" : {
			"Type" : "AWS::EC2::EIPAssociation",
			"Properties" : {
				"InstanceId" : { "Ref" : "KeystoneServer" },
				"EIP" : { "Ref" : "KeystoneIPAddress" }
			}
		},
		
		"SwiftClusterSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable SSH access via port 22",
				"SecurityGroupIngress" : [
					{"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
					{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
				]
			}
		},
		
		
    "KeystoneServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
			"configSets" : {
				"fullinstall" : [ "setup_seed", "setup_database", "setup_keystone" ]
			},
			"setup_seed" : {
				"files" : {
					"/opt/osonaws/tmp/all.preseed" : {
						"content" : { "Fn::Join" : ["", [
							"mysql-server mysql-server/root_password password ", { "Ref" : "KeystoneMysqlRootPassword" }, "\n",
							"mysql-server mysql-server/root_password_again password ", { "Ref" : "KeystoneMysqlRootPassword" }, "\n",
							"mysql-server mysql-server/start_on_boot boolean true\n"
					  ]]},
					"mode"  : "000600",
					"owner" : "ubuntu",
					"group" : "ubuntu"
					},
					"/opt/osonaws/tmp/setup_seed" : {
						"content" : { "Fn::Join" : ["", [
						  "#!/bin/bash -v\n",
						  "debconf-set-selections < /opt/osonaws/tmp/all.preseed\n"
						  ]]},
						"mode"  : "000700",
						"owner" : "ubuntu",
						"group" : "ubuntu"
					 }
				},
				"commands" : {
					"01_seed" : {
						"command" : "/opt/osonaws/tmp/setup_seed"
					}
				}
			},
			"setup_database" : {
				"packages" : {
					"apt" : {
						"mysql-server"			: []
					}
				},
				"files" : {
				  "/opt/osonaws/setup.mysql" : {
					"content" : { "Fn::Join" : ["", [
						"CREATE DATABASE keystone;\n",
						"GRANT ALL ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '", { "Ref" : "KeystoneMysqlUserPassword" }, "';\n",
						"GRANT ALL ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '", { "Ref" : "KeystoneMysqlUserPassword" }, "';\n"
						]]},
					"mode"  : "000600",
					"owner" : "ubuntu",
					"group" : "ubuntu"
				  },
				  "/opt/osonaws/setup_database" : {
					"content" : { "Fn::Join" : ["", [
					  "#!/bin/bash -v\n",
					  "mysql -u root --password='", { "Ref" : "KeystoneMysqlRootPassword" }, "' < /opt/osonaws/setup.mysql\n"
					  ]]},
					"mode"  : "000700",
					"owner" : "ubuntu",
					"group" : "ubuntu"
				  }
				},
				"commands" : {
					"01_setup_database" : {
						"command" : "/opt/osonaws/setup_database"
					}
				}
			},
			"setup_keystone" : {
				"packages" : {
					"apt" : {
		                "keystone"                 : [],
		                "python-mysqldb"           : []
					}
				},
				"files" : {
					   "/opt/osonaws/setup_keystone" : {
							"content" : { "Fn::Join" : ["", [
								"#!/bin/bash -v\n",
								"rm /var/lib/keystone/keystone.db\n",
								"sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf\n",
				             	"sed -i \"s/sqlite:\\/\\/\\/\\/var\\/lib\\/keystone\\/keystone.db\/mysql:\\/\\/keystone:", { "Ref" : "KeystoneMysqlUserPassword" }, "@0.0.0.0\\/keystone\/g\" /etc/keystone/keystone.conf\n",
								"sed -i \"s/admin_token = ADMIN/admin_token = ", { "Ref" : "KeystoneAdminToken" }, "/g\" /etc/keystone/keystone.conf\n",
								"service mysql restart\n",
								"service keystone restart\n",
								"keystone-manage db_sync\n"
								]]},
							"mode"  : "000700",
							"owner" : "ubuntu",
							"group" : "ubuntu"
				},
				"/opt/osonaws/setup_keystone_data" : {
						"content" : { "Fn::Join" : ["", [
							"#!/bin/bash -v\n",		
							"function get_id () {\n",
							" echo `\"$@\" | awk '/ id / { print $4 }'`\n",
							"}\n",
							"ADMIN_PASSWORD=${ADMIN_PASSWORD:-", { "Ref" : "KeystoneSwiftUserPassword" }, "}\n",
							"SERVICE_PASSWORD=${SERVICE_PASSWORD:-$ADMIN_PASSWORD}\n",
							"SERVICE_TENANT_NAME=${SERVICE_TENANT_NAME:-service}\n",
							"SERVICE_HOST='127.0.0.1'\n",
							
							"export SERVICE_TOKEN='", { "Ref" : "KeystoneAdminToken" }, "'\n",
							"export SERVICE_ENDPOINT='http://0.0.0.0:35357/v2.0'\n",
							
							"SERVICE_TENANT=$(get_id keystone tenant-create --name=\"$SERVICE_TENANT_NAME\")\n",
							
							"ADMIN_ROLE=$(get_id keystone role-create --name=admin)\n",
							"SWIFT_USER=$(get_id keystone user-create --name=swift --pass=\"$SERVICE_PASSWORD\" --tenant_id $SERVICE_TENANT --email=swift@example.com)\n",
							"keystone user-role-add --tenant_id $SERVICE_TENANT --user $SWIFT_USER --role $ADMIN_ROLE\n",
							
							"SWIFT_SERVICE=$(get_id keystone service-create --name=swift --type=\"object-store\" --description=\"Swift Service\")\n",
							"keystone endpoint-create --region RegionOne --service_id $SWIFT_SERVICE --publicurl \"http:\/\/$SERVICE_HOST:8080\/v1\/AUTH_%(tenant_id)s\" --adminurl \"http:\/\/$SERVICE_HOST:8080\" --internalurl \"http:\/\/$SERVICE_HOST:8080\/v1\/AUTH_%(tenant_id)s\"\n"
							]]},
						"mode"  : "000700",
						"owner" : "ubuntu",
						"group" : "ubuntu"
					  }
				},
				"commands" : {
					"01_setup_keystone" : {
						"command" : "/opt/osonaws/setup_keystone"
					},
					"02_setup_keystone_data" : {
						"command" : "/opt/osonaws/setup_keystone_data"
					}
				}
			}
          }
      },
      "Properties" : {
			"KeyName" : { "Ref" : "KeyName" },
			"InstanceType": { "Ref": "InstanceType" },
			"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
			"SecurityGroups" : [ {"Ref" : "SwiftClusterSecurityGroup"} ],
			"Monitoring" : "false",
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
				"#! /bin/bash\n",

				"# -- Update\n",
				"apt-get update\n",
				"apt-get -y install python-setuptools\n",
				"easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-1.1.tar.gz\n",
				
				"function error_exit\n",
				"{\n",
				"  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "KeystoneWaitHandle" }, "'\n",
				"  exit 1\n",
				"}\n",
				"cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r KeystoneServer ",
				"    --access-key ",  { "Ref" : "OpenstackUserAccessKey" },
				"    --secret-key ", {"Fn::GetAtt": ["OpenstackUserAccessKey", "SecretAccessKey"]},
				"    --region ", { "Ref" : "AWS::Region" }, 
				"    --configset fullinstall > /tmp/ok.init 2>/tmp/fail.init\n",
				"# All is well so signal success\n",
				"cfn-signal -e 0 -r \"Keystone setup complete\" '", { "Ref" : "KeystoneWaitHandle" }, "'\n"
				]]}}
		}
	}
}
}
  